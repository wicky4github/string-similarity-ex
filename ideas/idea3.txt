// assume a dyadic array
var arr = [
    [1],
    [2],
    [3],
    [4],
]

/*
expectation: 
[
    1,
    12,123,124,1234,
    13,134,
    14,
    2,
    23,24,234,
    3,
    34,
    4,
]
*/

/*
analysis:
    f([1], f([2], f([3], f([4]))))
    f([4], []) = [4]
    f([3], f([4])) = f([3], [4]) = [3,4,34]
    f([2], f([3], f(4))) = f([2], f([3], [4])) = f([2], [3,4,34]) = [2,3,4,34,23,24,234]
    f([1], f([2], f([3], f([4])))) = f([1], [2,3,4,34,23,24,234]) = [1,2,3,4,34,23,24,234,12,13,14,134,123,124,1234]
*/

// implement
function getRes(arr) {
    function f(arr1, arr2) {
        var tmpArr = []
        for(var i = 0; i < arr1.length; i++) {
            tmpArr.push(arr1[i])
        }
        for(var j = 0; j < arr2.length; j++) {
            tmpArr.push(arr2[j])
        }
        for(var m = 0; m < arr1.length; m++) {
            for(n = 0; n < arr2.length; n++) {
                tmpArr.push(arr1[m] + '' + arr2[n])
            }
        }
        return tmpArr;
    }
    var p = [];
    for(var i = arr.length - 1; i >= 0; i--) {
        p = f(arr[i], p);
    }
    return p;
}

// derivative
function getReplacements(arr) {
     function f(o, p) {
        var t1 = [];
        for(var i = 0; i < o.replaces.length; i++) {
            var o1 = {};
            o1[o.word] = o.replaces[i];
            t1.push(o1);
        }
        var t2 = [];
        for(var m = 0; m < p.length; m++) {
            for(var n = 0; n < t1.length; n++) {
                var o2 = {};
                for(var a1 in p[m]) {
                    o2[a1] = p[m][a1];
                }
                for(var a2 in t1[n]) {
                    o2[a2] = t1[n][a2];
                }
                t2.push(o2);
            }
        }
        for(var j = 0; j < p.length; j++) {
            t1.push(p[j]);
        }
        return t1.concat(t2);
    }
    var p = [];
    for(var i = arr.length - 1; i >= 0; i--) {
        p = f(arr[i], p);
    }
}
var arr = [{
    word: 'pipes',
    replaces: ['parts']
}, {
    word: 'let',
    replaces: ['left']
}, {
    word: 'out',
    replaces: ['us', 'oh', 'owe']
}, {
    word: 'smelly',
    replaces: ['smell', 'smelling']
}]
var replacements = getReplacements(arr);
console.log(replacements)

/*
    f({word: 'smelly', replaces: ['smell', 'smelling']}, []) = [{'smelly': 'smell'}, {'smelly': 'smelling'}]
    f({word: 'out', replaces: ['us']}, [{'smelly': 'smell'}, {'smelly': 'smelling'}]) = [{out: 'us'}, {smelly: 'smell'}, {smelly: 'smelling'}, {out: 'us', smelly: 'smell'}, {out: 'us', smelly: 'semlling'}]
*/